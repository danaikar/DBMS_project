
HP_CreateFile()
Η συνάρτηση HP_CreateFile χρησιμοποιείται για τη δημιουργία και κατάλληλη 
αρχικοποίηση ενός άδειου αρχείου σωρού με όνομα που δινεται σαν ορισμα.
Υστερα, δεσμευει και αρχικοποιει ενα block το οποιο ειναι 
η επικεφαλιδα και εκει περιεχεται το ειδος του αρχειου (στη 
συγκεκριμενη περιπτωση 0), το αναγνωριστικο του ερχειου και το ονομα.
Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεται 0,ενώ σε διαφορετική περίπτωση -1.



HP_OpenFile()
Η συνάρτηση HP_OpenFile ανοίγει το αρχείο που δημιουργηθηκε και διαβάζει από το πρώτο 
μπλοκ την πληροφορία που αφορά το αρχείο σωρού. Αν οντως το αρχειο ειναι αρχειο σωρου,
αντιγραφει την επικεφαλιδα (με ολες τις πληροφοριες) και την επιστρεφει.
Σε περίπτωση που συμβεί οποιοδήποτε σφάλμα, επιστρέφεται τιμή NULL.



HP_CloseFile()
Η συνάρτηση HP_CloseFile κλείνει το αρχείο που αφορα την πληροφορια που δοθηκε
ως ορισμα. Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεται 0, ενώ σε 
διαφορετική περίπτωση -1. 



HP_InsertEntry()
Η συνάρτηση HP_InsertEntry ανοιγει το αρχείο που αφορα την πληροφορια που
δοθηκε ως ορισμα και μετρα με την καταλληλη συναρτηση ποσα blocks περιεχει.
Αν ο αριθμος αυτος ειναι 1, δηλαδη το αρχειο εχει μονο επικεφαλιδα,
δημιουργει ενα καινουριο block. To ιδιο συμβαινει και αν το record δεν 
χωραει γιατι το block εχει γεμισει, οποτε πρεπει να δημιουργηθει ενα καινουριο.
Οταν συμβουν οι ελεγχοι αυτοι, πηγαινει στην  καταλληλη θεση, που ειναι 
σιγουρα μετα απο την επικεφαλίδα και αποθηκευει την εγγραφη. Σε περίπτωση που 
εκτελεστεί επιτυχώς, επιστρέφεταιο αριθμός του block στο οποίο έγινε η εισαγωγή, 
ενώ σε διαφορετική περίπτωση -1.



HP_GetAllEntries()
Η συνάρτηση HP_GetAllEntries ανοιγει το αρχείο που αφορα την πληροφορια που
δοθηκε ως ορισμα και μετρα με την καταλληλη συναρτηση ποσα blocks περιεχει.
Μετα κανει iterate τα blocks (εκτος του header) και κοιταει αν υπαρχει εγγραφη
με id ιδιο με αυτο που δοθηκε ως ορισμα. Στην περίπτωση αυτη εκτυπωνει την εγγραφη και
επιστρέφει το πλήθος των blocks που διαβάστηκαν, ενώ σε περίπτωση λάθους επιστρέφει -1.






---------------------------------------------------------------------------------------






HΤ_CreateFile()
Η συνάρτηση HΤ_CreateFile χρησιμοποιείται για τη δημιουργία και κατάλληλη 
αρχικοποίηση ενός άδειου αρχείου κατακερματισμού με όνομα που δινεται σαν ορισμα.
Υστερα, δεσμευει και αρχικοποιει ενα block το οποιο ειναι η επικεφαλιδα και 
εκει περιεχεται το ειδος του αρχειου(στη συγκεκριμενη περιπτωση 1), το αναγνωριστικο 
του ερχειου, το ονομα, ο αριθμος των buckets(δινεται ως ορισμα) και ο αριθμος των
records ανα block. Ακομη κραταμε και εναν πινακα bucket_end που περιχει τον τρεχων αριθμο 
των records ανα block (και αρχικοποιειται σε -1, αφου δεν περιεχει τιποτα).
Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεται 0,ενώ σε διαφορετική περίπτωση -1.



HΤ_OpenFile()
Η συνάρτηση HΤ_OpenFile ανοίγει το αρχείο που δημιουργηθηκε και διαβάζει από το πρώτο 
μπλοκ την πληροφορία που αφορά το αρχείο κατακερματισμού. Αν οντως το αρχειο ειναι αρχειο 
κατακερματισμού, αντιγραφει την επικεφαλιδα (με ολες τις πληροφοριες) και την επιστρεφει.
Σε περίπτωση που συμβεί οποιοδήποτε σφάλμα, επιστρέφεται τιμή NULL.



HΤ_CloseFile()
Η συνάρτηση HΤ_CloseFile κλείνει το αρχείο που αφορα την πληροφορια που δοθηκε
ως ορισμα. Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεται 0, ενώ σε 
διαφορετική περίπτωση -1. 



HΤ_InsertEntry()
Η συνάρτηση HΤ_InsertEntry ανοιγει το αρχείο που αφορα την πληροφορια που
δοθηκε ως ορισμα και βρισκει το bucket στο οποιο κανει hash το record.
Aν αυτο το bucket δεν υπαρχει(δηλαδη ειναι -1), το δημιουργουμε με τη γνωστη διαδικασια.
Διαφορετικα, αν υπαρχει το καταλληλο bucket δηλαδη, πρεπει να ελεγξουμε αν
χωραει εκει. Οποτε αν δεν χωραει δημιουργουμε ενα νεο bucket το οποιο θα μπει
με τη σειρα του στην αλυσιδα των buckets.
Σε περίπτωση που εκτελεστεί επιτυχώς, επιστρέφεταιο αριθμός του block στο οποίο 
έγινε η εισαγωγή, ενώ σε διαφορετική περίπτωση -1.



HΤ_GetAllEntries()
Η συνάρτηση HT_GetAllEntries ανοιγει το αρχείο που αφορα την πληροφορια που
δοθηκε ως ορισμα και βρισκει το bucket στο οποιο κανει hash το συγκεκριμενο value
που δοθηκε. Αφου βρει το bucket, πηγαινει στο τελευταιο του block και σειριακα
(προς τα πισω) ελεγχει αν υπαρχει record με το ζητουμενο value.
Στην περίπτωση αυτη εκτυπωνει την εγγραφη και επιστρέφει το πλήθος των blocks που 
διαβάστηκαν, ενώ σε περίπτωση λάθους επιστρέφει -1.


